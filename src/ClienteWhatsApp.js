const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const { manejarMensaje } = require('./handlers/ManejadorMensajes');

console.log('üöÄ Iniciando Asistente ISIUX...');
console.log('üì± Conectando con WhatsApp...\n');

const client = new Client({
    authStrategy: new LocalAuth()
});

client.on('qr', (qr) => {
    console.log('üîê C√≥digo QR generado:');
    console.log('üì≤ Escanea este c√≥digo con tu WhatsApp para autenticar el bot\n');
    qrcode.generate(qr, { small: true });
    console.log('\n‚è≥ Esperando autenticaci√≥n...\n');
});

client.on('ready', () => {
    console.log('‚úÖ ¬°Bot conectado exitosamente!');
    console.log('ü§ñ Asistente ISIUX est√° listo para recibir mensajes\n');
});

client.on('authenticated', () => {
    console.log('üîì Autenticaci√≥n exitosa');
});

client.on('auth_failure', (msg) => {
    console.log('‚ùå Error de autenticaci√≥n:', msg);
});

client.on('disconnected', (reason) => {
    console.log('üîå Bot desconectado:', reason);
});

client.on('message', async msg => {
    const numero = msg.from;
    const mensaje = msg.body;

    console.log(`üì® Mensaje recibido de ${numero}: "${mensaje}"`);

    // 1. Si es pregunta, reacciona con ü§î
    if (
        mensaje.trim().endsWith('?') ||
        /^(qu√©|cual|cu√°l|cu√°les|como|c√≥mo|d√≥nde|por qu√©|qui√©n|quienes|para qu√©|cuando|cu√°ndo)/i.test(mensaje.trim())
    ) {
        try {
            await msg.react('ü§î');
        } catch (e) {
            console.log('No se pudo reaccionar al mensaje:', e.message);
        }
    }

    // 2. Mostrar estado escribiendo mientras procesa
    try {
        await msg.getChat().then(chat => chat.sendStateTyping());
    } catch (e) {
        console.log('No se pudo enviar estado escribiendo:', e.message);
    }

    // Procesa el mensaje con tu handler (async)
    const respuesta = await manejarMensaje(client, numero, mensaje);

    // 3. Responde al usuario
    if (respuesta) {
        await msg.reply(respuesta);
        console.log(`üí¨ Respuesta enviada: "${respuesta}"\n`);
    }

    // 4. Quitar estado escribiendo
    try {
        await msg.getChat().then(chat => chat.clearState());
    } catch (e) {
        // No es cr√≠tico si falla
    }
});

client.initialize(); 