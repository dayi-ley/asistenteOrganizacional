const { buscarFragmentosRelevantes } = require('./utils/busquedaSemantica');

async function testEmbeddingsCortos() {
  console.log('üß™ Probando embeddings cortos...\n');
  
  const preguntas = [
    '¬øCu√°ntas unidades tiene el curso?',
    '¬øCu√°l es la escala de notas?',
    '¬øCu√°l es la nota m√≠nima?',
    '¬øCu√°ndo es el examen parcial?',
    '¬øCu√°ndo es el examen final?',
    '¬øCu√°les son las ponderaciones?',
    '¬øCu√°l es la f√≥rmula de evaluaci√≥n?',
    '¬øCu√°ntas inasistencias puedo tener?'
  ];
  
  for (const pregunta of preguntas) {
    console.log(`\nüìù Pregunta: "${pregunta}"`);
    try {
      const fragmentos = await buscarFragmentosRelevantes(pregunta, null, 5);
      console.log(`üìä Fragmentos encontrados: ${fragmentos.length}`);
      
      // Buscar embeddings cortos espec√≠ficos
      const embeddingCorto = fragmentos.find(f => f.tipo && f.tipo.includes('_corto'));
      
      if (embeddingCorto) {
        console.log(`‚úÖ Encontrado embedding corto:`);
        console.log(`   Tipo: ${embeddingCorto.tipo}`);
        console.log(`   Similitud: ${embeddingCorto.similitud.toFixed(4)}`);
        console.log(`   Texto: "${embeddingCorto.texto}"`);
      } else {
        console.log(`‚ùå No se encontr√≥ embedding corto espec√≠fico`);
        console.log(`üéØ Mejor similitud: ${fragmentos[0]?.similitud.toFixed(4)}`);
        console.log(`   Texto: "${fragmentos[0]?.texto.substring(0, 80)}..."`);
      }
      
    } catch (error) {
      console.error(`‚ùå Error: ${error.message}`);
    }
  }
}

testEmbeddingsCortos(); 